window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"metats": {"fullname": "metats", "modulename": "metats", "kind": "module", "doc": "<p></p>\n"}, "metats.datasets": {"fullname": "metats.datasets", "modulename": "metats.datasets", "kind": "module", "doc": "<p></p>\n"}, "metats.datasets.Dataset": {"fullname": "metats.datasets.Dataset", "modulename": "metats.datasets", "qualname": "Dataset", "kind": "class", "doc": "<p>Base class for datasets</p>\n"}, "metats.datasets.ETSDataset": {"fullname": "metats.datasets.ETSDataset", "modulename": "metats.datasets", "qualname": "ETSDataset", "kind": "class", "doc": "<p>ETS dataset\nSampling synthetic data from the ETS model</p>\n", "bases": "Dataset"}, "metats.datasets.ETSDataset.__init__": {"fullname": "metats.datasets.ETSDataset.__init__", "modulename": "metats.datasets", "qualname": "ETSDataset.__init__", "kind": "function", "doc": "<p>Args:\n    ets_families: list of ETS families to sample from and number of samples\n    length: length of generated series\n    freq : frequency\n    positive : if True, only positive-valued series will be generated</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ets_families</span>, </span><span class=\"param\"><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"mi\">7</span>, </span><span class=\"param\"><span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, "metats.datasets.ETSDataset.load": {"fullname": "metats.datasets.ETSDataset.load", "modulename": "metats.datasets", "qualname": "ETSDataset.load", "kind": "function", "doc": "<p>Load dataset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">return_family</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.datasets.ETSDataset.generate_series": {"fullname": "metats.datasets.ETSDataset.generate_series", "modulename": "metats.datasets", "qualname": "ETSDataset.generate_series", "kind": "function", "doc": "<p>samples a time series from ETS class\ninput parameters:</p>\n\n<ul>\n<li>length: length of the time series</li>\n<li>error : type of the error compoenent\n'A' for additive error\n'M' for multiplicative error</li>\n<li>trend : type of the trend component\n'N' for no trend\n'A' for additive trend\n'Ad' for additive damped trend</li>\n<li>seasonality: type of the seasonality component\n'N' for no seasonality\n'A' for additive seasonality\n'M' for multiplicativeseasonality</li>\n<li>seasonality_freq : frequency of the seasonality</li>\n<li>alpha, beta, gamma, phi, l0, b0, error_mu, error_sigma : parameters of the ETS model</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">error</span><span class=\"o\">=</span><span class=\"s1\">&#39;A&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">trend</span><span class=\"o\">=</span><span class=\"s1\">&#39;A&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">seasonality</span><span class=\"o\">=</span><span class=\"s1\">&#39;A&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.6</span>,</span><span class=\"param\">\t<span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.6</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">l0</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">b0</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">error_mu</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">error_sigma</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">seasonality_freq</span><span class=\"o\">=</span><span class=\"mi\">7</span>,</span><span class=\"param\">\t<span class=\"n\">s_init</span><span class=\"o\">=</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">0.57520203</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.11994474</span><span class=\"p\">,</span>  <span class=\"mf\">1.59662185</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.53403761</span><span class=\"p\">,</span>  <span class=\"mf\">1.49969527</span><span class=\"p\">,</span>\n        <span class=\"mf\">0.90075034</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.22068094</span><span class=\"p\">])</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features": {"fullname": "metats.features", "modulename": "metats.features", "kind": "module", "doc": "<p></p>\n"}, "metats.features.FeatureGenerator": {"fullname": "metats.features.FeatureGenerator", "modulename": "metats.features", "qualname": "FeatureGenerator", "kind": "class", "doc": "<p>Base class for feature generators</p>\n"}, "metats.features.FeatureGenerator.fit": {"fullname": "metats.features.FeatureGenerator.fit", "modulename": "metats.features", "qualname": "FeatureGenerator.fit", "kind": "function", "doc": "<p>Fit the feature generator\ninputs:\n    timeseries: the timeseries (numpy array) (num_series x series_length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeseries</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.FeatureGenerator.transform": {"fullname": "metats.features.FeatureGenerator.transform", "modulename": "metats.features", "qualname": "FeatureGenerator.transform", "kind": "function", "doc": "<p>Generate features\ninputs:\n    timeseries: the timeseries (numpy array) (num_series x series_length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeseries</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.FeatureGenerator.fit_transform": {"fullname": "metats.features.FeatureGenerator.fit_transform", "modulename": "metats.features", "qualname": "FeatureGenerator.fit_transform", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeseries</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.FeatureGenerator.is_trainable": {"fullname": "metats.features.FeatureGenerator.is_trainable", "modulename": "metats.features", "qualname": "FeatureGenerator.is_trainable", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep": {"fullname": "metats.features.deep", "modulename": "metats.features.deep", "kind": "module", "doc": "<p></p>\n"}, "metats.features.deep.LSTMEncoder": {"fullname": "metats.features.deep.LSTMEncoder", "modulename": "metats.features.deep", "qualname": "LSTMEncoder", "kind": "class", "doc": "<p>A general class for stacked lstm encoder</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.LSTMEncoder.__init__": {"fullname": "metats.features.deep.LSTMEncoder.__init__", "modulename": "metats.features.deep", "qualname": "LSTMEncoder.__init__", "kind": "function", "doc": "<p>inputs:\n    input_size: dimension of input series\n    latent_size: dimension of latent representation\n    hidden_size: dimension of lstm hidden cells\n    num_layers: number of stacked lstm\n    directions: 1 for ordinary and 2 for bi-directional lstm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_size</span>, </span><span class=\"param\"><span class=\"n\">latent_size</span>, </span><span class=\"param\"><span class=\"n\">hidden_size</span>, </span><span class=\"param\"><span class=\"n\">num_layers</span>, </span><span class=\"param\"><span class=\"n\">directions</span></span>)</span>"}, "metats.features.deep.LSTMEncoder.get_initial": {"fullname": "metats.features.deep.LSTMEncoder.get_initial", "modulename": "metats.features.deep", "qualname": "LSTMEncoder.get_initial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.LSTMEncoder.forward": {"fullname": "metats.features.deep.LSTMEncoder.forward", "modulename": "metats.features.deep", "qualname": "LSTMEncoder.forward", "kind": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.LSTMDecoder": {"fullname": "metats.features.deep.LSTMDecoder", "modulename": "metats.features.deep", "qualname": "LSTMDecoder", "kind": "class", "doc": "<p>A general class for stacked lstm decoder</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.LSTMDecoder.__init__": {"fullname": "metats.features.deep.LSTMDecoder.__init__", "modulename": "metats.features.deep", "qualname": "LSTMDecoder.__init__", "kind": "function", "doc": "<p>inputs:\n    output_length: length of the output (reconstructed) series\n    output_size: dimension of the output (reconstructed) series\n    latent_size: dimension of latent representation\n    hidden_size: dimension of lstm hidden cells\n    num_layers: number of stacked lstm\n    directions: 1 for ordinary and 2 for bi-directional lstm</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">output_length</span>,</span><span class=\"param\">\t<span class=\"n\">output_size</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_size</span>,</span><span class=\"param\">\t<span class=\"n\">latent_size</span>,</span><span class=\"param\">\t<span class=\"n\">num_layers</span>,</span><span class=\"param\">\t<span class=\"n\">directions</span></span>)</span>"}, "metats.features.deep.LSTMDecoder.get_initial": {"fullname": "metats.features.deep.LSTMDecoder.get_initial", "modulename": "metats.features.deep", "qualname": "LSTMDecoder.get_initial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.LSTMDecoder.forward": {"fullname": "metats.features.deep.LSTMDecoder.forward", "modulename": "metats.features.deep", "qualname": "LSTMDecoder.forward", "kind": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">latent</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.GRUEncoder": {"fullname": "metats.features.deep.GRUEncoder", "modulename": "metats.features.deep", "qualname": "GRUEncoder", "kind": "class", "doc": "<p>A general class for stacked GRU encoders</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.GRUEncoder.__init__": {"fullname": "metats.features.deep.GRUEncoder.__init__", "modulename": "metats.features.deep", "qualname": "GRUEncoder.__init__", "kind": "function", "doc": "<p>inputs:\n    input_size: dimension of input series\n    latent_size: dimension of latent representation\n    hidden_size: dimension of lstm hidden cells\n    num_layers: number of stacked lstm\n    directions: 1 for ordinary and 2 for bi-directional lstm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_size</span>, </span><span class=\"param\"><span class=\"n\">latent_size</span>, </span><span class=\"param\"><span class=\"n\">hidden_size</span>, </span><span class=\"param\"><span class=\"n\">num_layers</span>, </span><span class=\"param\"><span class=\"n\">directions</span></span>)</span>"}, "metats.features.deep.GRUEncoder.get_initial": {"fullname": "metats.features.deep.GRUEncoder.get_initial", "modulename": "metats.features.deep", "qualname": "GRUEncoder.get_initial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.GRUEncoder.forward": {"fullname": "metats.features.deep.GRUEncoder.forward", "modulename": "metats.features.deep", "qualname": "GRUEncoder.forward", "kind": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.GRUDecoder": {"fullname": "metats.features.deep.GRUDecoder", "modulename": "metats.features.deep", "qualname": "GRUDecoder", "kind": "class", "doc": "<p>A General class for stacked gru decoder</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.GRUDecoder.__init__": {"fullname": "metats.features.deep.GRUDecoder.__init__", "modulename": "metats.features.deep", "qualname": "GRUDecoder.__init__", "kind": "function", "doc": "<p>inputs:\n    output_length: length of the output (reconstructed) series\n    output_size: dimension of the output (reconstructed) series\n    latent_size: dimension of latent representation\n    hidden_size: dimension of gru hidden cells\n    num_layers: number of stacked gru\n    directions: 1 for ordinary and 2 for bi-directional gru</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">output_length</span>,</span><span class=\"param\">\t<span class=\"n\">output_size</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_size</span>,</span><span class=\"param\">\t<span class=\"n\">latent_size</span>,</span><span class=\"param\">\t<span class=\"n\">num_layers</span>,</span><span class=\"param\">\t<span class=\"n\">directions</span></span>)</span>"}, "metats.features.deep.GRUDecoder.get_initial": {"fullname": "metats.features.deep.GRUDecoder.get_initial", "modulename": "metats.features.deep", "qualname": "GRUDecoder.get_initial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.GRUDecoder.forward": {"fullname": "metats.features.deep.GRUDecoder.forward", "modulename": "metats.features.deep", "qualname": "GRUDecoder.forward", "kind": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">latent</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.MLPEncoder": {"fullname": "metats.features.deep.MLPEncoder", "modulename": "metats.features.deep", "qualname": "MLPEncoder", "kind": "class", "doc": "<p>A general class for MLP encoder</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.MLPEncoder.__init__": {"fullname": "metats.features.deep.MLPEncoder.__init__", "modulename": "metats.features.deep", "qualname": "MLPEncoder.__init__", "kind": "function", "doc": "<p>inputs:\n    input_size: dimension of input series\n    input_length : length of input series\n    latent_size: dimension of latent representation\n    hidden_layers: a tuple of hidden layers dimension\n    activation: a custom activation function which can be any PyTorch module supporting a backward pass,\n                if None passed, then the nn.Tanh() will be used</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_size</span>,</span><span class=\"param\">\t<span class=\"n\">input_length</span>,</span><span class=\"param\">\t<span class=\"n\">latent_size</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_layers</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,)</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "metats.features.deep.MLPEncoder.forward": {"fullname": "metats.features.deep.MLPEncoder.forward", "modulename": "metats.features.deep", "qualname": "MLPEncoder.forward", "kind": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.MLPDecoder": {"fullname": "metats.features.deep.MLPDecoder", "modulename": "metats.features.deep", "qualname": "MLPDecoder", "kind": "class", "doc": "<p>A general class for MLP encoder</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.MLPDecoder.__init__": {"fullname": "metats.features.deep.MLPDecoder.__init__", "modulename": "metats.features.deep", "qualname": "MLPDecoder.__init__", "kind": "function", "doc": "<p>inputs:\n    input_size: dimension of input series\n    input_length : length of input series\n    latent_size: dimension of latent representation\n    hidden_layers: a tuple of hidden layers dimension\n    activation: a custom activation function which can be any PyTorch module supporting a backward pass,\n                if None passed, then the nn.Tanh() wiil be used</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_size</span>,</span><span class=\"param\">\t<span class=\"n\">input_length</span>,</span><span class=\"param\">\t<span class=\"n\">latent_size</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_layers</span><span class=\"o\">=</span><span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "metats.features.deep.MLPDecoder.forward": {"fullname": "metats.features.deep.MLPDecoder.forward", "modulename": "metats.features.deep", "qualname": "MLPDecoder.forward", "kind": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">latent</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.Encoder_Decoder_TCN": {"fullname": "metats.features.deep.Encoder_Decoder_TCN", "modulename": "metats.features.deep", "qualname": "Encoder_Decoder_TCN", "kind": "class", "doc": "<p>A general class for Encoder decoder with \ndilated Temporal Convolutional Networks (TCN).\n<em>NOTE</em>: make sure <code>input_size</code> is devisible by $2 ^ {||{hidden_layers}||_0}$.</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"fullname": "metats.features.deep.Encoder_Decoder_TCN.__init__", "modulename": "metats.features.deep", "qualname": "Encoder_Decoder_TCN.__init__", "kind": "function", "doc": "<p>inputs:\n    input_size    : dimension of input series\n    input_length  : length of input series\n    hidden_layers : a tuple of hidden layers dimension.\n                       It's size determines model's depth, e.g., hidden_layers=(128,64,32) has depth three.\n    kernel_size   : a size of the convolving kernel\n    dilation      : Spacing between kernel elements. Default: 2\n    activation    : a custom activation function which can be any PyTorch module supporting a backward pass,\n                      if None passed, then the nn.Tanh() will be used\n    dropout       : probability of an element to be zeroed. Default: 0.3</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_size</span>,</span><span class=\"param\">\t<span class=\"n\">input_length</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_layers</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">dilation</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"o\">=</span><span class=\"mf\">0.3</span></span>)</span>"}, "metats.features.deep.AutoEncoder": {"fullname": "metats.features.deep.AutoEncoder", "modulename": "metats.features.deep", "qualname": "AutoEncoder", "kind": "class", "doc": "<p>General AutoEncoder class</p>\n", "bases": "torch.nn.modules.module.Module"}, "metats.features.deep.AutoEncoder.__init__": {"fullname": "metats.features.deep.AutoEncoder.__init__", "modulename": "metats.features.deep", "qualname": "AutoEncoder.__init__", "kind": "function", "doc": "<p>Args:\n  encoder: a PyTorch module\n  decoder: a PyTorch module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoder</span>, </span><span class=\"param\"><span class=\"n\">decoder</span></span>)</span>"}, "metats.features.deep.AutoEncoder.encode": {"fullname": "metats.features.deep.AutoEncoder.encode", "modulename": "metats.features.deep", "qualname": "AutoEncoder.encode", "kind": "function", "doc": "<p>encodes a mini batch of time series\nArgs:\n  Y : time series batch a PyTorch Tensor (batch_size x seires_length x series_dim)\n  inference : if True, only forward pass will happen and the gradient won't be computed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">inference</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.AutoEncoder.decode": {"fullname": "metats.features.deep.AutoEncoder.decode", "modulename": "metats.features.deep", "qualname": "AutoEncoder.decode", "kind": "function", "doc": "<p>decodes a mini batch of latent vectors\nArgs:\n  latent: a PyTorch Tensor (batch_size x latent_dim)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">latent</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.AutoEncoder.loss": {"fullname": "metats.features.deep.AutoEncoder.loss", "modulename": "metats.features.deep", "qualname": "AutoEncoder.loss", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">minibatch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.PyTorchTrainer": {"fullname": "metats.features.deep.PyTorchTrainer", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer", "kind": "class", "doc": "<p>Abstract trainer for PyTorch models</p>\n"}, "metats.features.deep.PyTorchTrainer.__init__": {"fullname": "metats.features.deep.PyTorchTrainer.__init__", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer.__init__", "kind": "function", "doc": "<p>Args:\n  model : a PyTorch module\n  batch_size: size of each mini batch\n  learning_rate: optimizer's learning rate</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">16</span>, </span><span class=\"param\"><span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.02</span></span>)</span>"}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"fullname": "metats.features.deep.PyTorchTrainer.initial_optimizer", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer.initial_optimizer", "kind": "function", "doc": "<p>initializing the optimizer</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.PyTorchTrainer.initialize": {"fullname": "metats.features.deep.PyTorchTrainer.initialize", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer.initialize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"fullname": "metats.features.deep.PyTorchTrainer.register_loss_callback", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer.register_loss_callback", "kind": "function", "doc": "<p>register a callback to which the loss will be passed at each iteration</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fn</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"fullname": "metats.features.deep.PyTorchTrainer.apply_loss_callbacks", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer.apply_loss_callbacks", "kind": "function", "doc": "<p>calling all registered callbacks</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">loss</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"fullname": "metats.features.deep.PyTorchTrainer.get_mini_batch", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer.get_mini_batch", "kind": "function", "doc": "<p>a method which must be implemented to provide a mini batch for model\nit's better to use a dictionary as mini batch</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.deep.PyTorchTrainer.step": {"fullname": "metats.features.deep.PyTorchTrainer.step", "modulename": "metats.features.deep", "qualname": "PyTorchTrainer.step", "kind": "function", "doc": "<p>A single training step</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.statistical": {"fullname": "metats.features.statistical", "modulename": "metats.features.statistical", "kind": "module", "doc": "<p></p>\n"}, "metats.features.statistical.TsFresh": {"fullname": "metats.features.statistical.TsFresh", "modulename": "metats.features.statistical", "qualname": "TsFresh", "kind": "class", "doc": "<p>Generate features using TsFresh</p>\n", "bases": "metats.features.FeatureGenerator"}, "metats.features.statistical.TsFresh.fit": {"fullname": "metats.features.statistical.TsFresh.fit", "modulename": "metats.features.statistical", "qualname": "TsFresh.fit", "kind": "function", "doc": "<p>Fit the feature generator\ninputs:\n    timeseries: the timeseries (numpy array) (num_series x series_length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"fullname": "metats.features.statistical.TsFresh.reshape_for_tsfresh", "modulename": "metats.features.statistical", "qualname": "TsFresh.reshape_for_tsfresh", "kind": "function", "doc": "<p>Reshape the timeseries for tsfresh\ninputs:\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.statistical.TsFresh.transform": {"fullname": "metats.features.statistical.TsFresh.transform", "modulename": "metats.features.statistical", "qualname": "TsFresh.transform", "kind": "function", "doc": "<p>Extract features using tsfresh\ninputs:\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.unsupervised": {"fullname": "metats.features.unsupervised", "modulename": "metats.features.unsupervised", "kind": "module", "doc": "<p></p>\n"}, "metats.features.unsupervised.DeepAETrainer": {"fullname": "metats.features.unsupervised.DeepAETrainer", "modulename": "metats.features.unsupervised", "qualname": "DeepAETrainer", "kind": "class", "doc": "<p>Abstract trainer for PyTorch models</p>\n", "bases": "metats.features.deep.PyTorchTrainer"}, "metats.features.unsupervised.DeepAETrainer.__init__": {"fullname": "metats.features.unsupervised.DeepAETrainer.__init__", "modulename": "metats.features.unsupervised", "qualname": "DeepAETrainer.__init__", "kind": "function", "doc": "<p>Args:\n  model : a PyTorch module\n  batch_size: size of each mini batch\n  learning_rate: optimizer's learning rate</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"fullname": "metats.features.unsupervised.DeepAETrainer.get_mini_batch", "modulename": "metats.features.unsupervised", "qualname": "DeepAETrainer.get_mini_batch", "kind": "function", "doc": "<p>a method which must be implemented to provide a mini batch for model\nit's better to use a dictionary as mini batch</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.unsupervised.DeepAutoEncoder": {"fullname": "metats.features.unsupervised.DeepAutoEncoder", "modulename": "metats.features.unsupervised", "qualname": "DeepAutoEncoder", "kind": "class", "doc": "<p>A wrapper class for feature extraction using deep auto encoders</p>\n", "bases": "metats.features.FeatureGenerator"}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"fullname": "metats.features.unsupervised.DeepAutoEncoder.__init__", "modulename": "metats.features.unsupervised", "qualname": "DeepAutoEncoder.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auto_encoder</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.006</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"fullname": "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback", "modulename": "metats.features.unsupervised", "qualname": "DeepAutoEncoder.print_loss_callback", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">loss</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"fullname": "metats.features.unsupervised.DeepAutoEncoder.fit", "modulename": "metats.features.unsupervised", "qualname": "DeepAutoEncoder.fit", "kind": "function", "doc": "<p>Fit the feature generator\ninputs:\n    timeseries: the timeseries (numpy array) (num_series x series_length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"fullname": "metats.features.unsupervised.DeepAutoEncoder.transform", "modulename": "metats.features.unsupervised", "qualname": "DeepAutoEncoder.transform", "kind": "function", "doc": "<p>Generate features\ninputs:\n    timeseries: the timeseries (numpy array) (num_series x series_length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"fullname": "metats.features.unsupervised.DeepAutoEncoder.is_trainable", "modulename": "metats.features.unsupervised", "qualname": "DeepAutoEncoder.is_trainable", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.unsupervised.Contrastive": {"fullname": "metats.features.unsupervised.Contrastive", "modulename": "metats.features.unsupervised", "qualname": "Contrastive", "kind": "class", "doc": "<p>Base Class for Contrastive feature extractors</p>\n", "bases": "metats.features.FeatureGenerator"}, "metats.features.unsupervised.Contrastive.fit": {"fullname": "metats.features.unsupervised.Contrastive.fit", "modulename": "metats.features.unsupervised", "qualname": "Contrastive.fit", "kind": "function", "doc": "<p>Fit the feature generator\ninputs:\n    timeseries: the timeseries (numpy array) (num_series x series_length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.features.unsupervised.Contrastive.transform": {"fullname": "metats.features.unsupervised.Contrastive.transform", "modulename": "metats.features.unsupervised", "qualname": "Contrastive.transform", "kind": "function", "doc": "<p>Generate features\ninputs:\n    timeseries: the timeseries (numpy array) (num_series x series_length)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.forecasters": {"fullname": "metats.forecasters", "modulename": "metats.forecasters", "kind": "module", "doc": "<p></p>\n"}, "metats.forecasters.BaseForecaster": {"fullname": "metats.forecasters.BaseForecaster", "modulename": "metats.forecasters", "qualname": "BaseForecaster", "kind": "class", "doc": "<p>Base class for base forecasters</p>\n"}, "metats.forecasters.statistical": {"fullname": "metats.forecasters.statistical", "modulename": "metats.forecasters.statistical", "kind": "module", "doc": "<p></p>\n"}, "metats.forecasters.statistical.SeasonalNaiveForecaster": {"fullname": "metats.forecasters.statistical.SeasonalNaiveForecaster", "modulename": "metats.forecasters.statistical", "qualname": "SeasonalNaiveForecaster", "kind": "class", "doc": "<p>Seasonal Naive Forecaster</p>\n", "bases": "metats.forecasters.BaseForecaster"}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"fullname": "metats.forecasters.statistical.SeasonalNaiveForecaster.predict", "modulename": "metats.forecasters.statistical", "qualname": "SeasonalNaiveForecaster.predict", "kind": "function", "doc": "<p>forecasting using the naive method\ninputs:\n    y: the time series to be forecasted numpy array (num_series x series_length x covariates_dim)\n    fh: the number of steps to forecast</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">fh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.forecasters.utils": {"fullname": "metats.forecasters.utils", "modulename": "metats.forecasters.utils", "kind": "module", "doc": "<p></p>\n"}, "metats.forecasters.utils.is_sktime_forecaster": {"fullname": "metats.forecasters.utils.is_sktime_forecaster", "modulename": "metats.forecasters.utils", "qualname": "is_sktime_forecaster", "kind": "function", "doc": "<p>Check if a given object is a sktime forecaster</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">forecaster</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.forecasters.utils.is_darts_forecaster": {"fullname": "metats.forecasters.utils.is_darts_forecaster", "modulename": "metats.forecasters.utils", "qualname": "is_darts_forecaster", "kind": "function", "doc": "<p>Check if a given object is a darts forecaster</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">forecaster</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"fullname": "metats.forecasters.utils.is_nixtla_stats_forecaster", "modulename": "metats.forecasters.utils", "qualname": "is_nixtla_stats_forecaster", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">forecaster</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.forecasters.wrappers": {"fullname": "metats.forecasters.wrappers", "modulename": "metats.forecasters.wrappers", "kind": "module", "doc": "<p></p>\n"}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"fullname": "metats.forecasters.wrappers.DartsForecasterWrapper", "modulename": "metats.forecasters.wrappers", "qualname": "DartsForecasterWrapper", "kind": "class", "doc": "<p>A Wrapper class for darts models</p>\n", "bases": "metats.forecasters.BaseForecaster"}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"fullname": "metats.forecasters.wrappers.DartsForecasterWrapper.__init__", "modulename": "metats.forecasters.wrappers", "qualname": "DartsForecasterWrapper.__init__", "kind": "function", "doc": "<p>inputs:\n    dart_model: a darts models which must be checked using is_darts_forecaster</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">darts_model</span></span>)</span>"}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"fullname": "metats.forecasters.wrappers.DartsForecasterWrapper.predict", "modulename": "metats.forecasters.wrappers", "qualname": "DartsForecasterWrapper.predict", "kind": "function", "doc": "<p>inputs:\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)\n    fh: forecast horizon\n    forecast_dim: the dimension of the forecast to be generated</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">fh</span>, </span><span class=\"param\"><span class=\"n\">forecast_dim</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"fullname": "metats.forecasters.wrappers.SKTimeForecasterWrapper", "modulename": "metats.forecasters.wrappers", "qualname": "SKTimeForecasterWrapper", "kind": "class", "doc": "<p>A Wrapper class for sktime models</p>\n", "bases": "metats.forecasters.BaseForecaster"}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"fullname": "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__", "modulename": "metats.forecasters.wrappers", "qualname": "SKTimeForecasterWrapper.__init__", "kind": "function", "doc": "<p>inputs:\n    dart_model: a sktime models which must be checked using is_sktime_forecaster</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sktime_model</span></span>)</span>"}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"fullname": "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict", "modulename": "metats.forecasters.wrappers", "qualname": "SKTimeForecasterWrapper.predict", "kind": "function", "doc": "<p>inputs:\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)\n    fh: forecast horizon\n    forecast_dim: the dimension of the forecast to be generated</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">fh</span>, </span><span class=\"param\"><span class=\"n\">forecast_dim</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"fullname": "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper", "modulename": "metats.forecasters.wrappers", "qualname": "NixtlaStatsForecasterWrapper", "kind": "class", "doc": "<p>A Wrapper class for Nixtla statistical forecasters</p>\n", "bases": "metats.forecasters.BaseForecaster"}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"fullname": "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__", "modulename": "metats.forecasters.wrappers", "qualname": "NixtlaStatsForecasterWrapper.__init__", "kind": "function", "doc": "<p>inputs:\n    nixtla_model: a darts models which must be checked using is_nixtla_stats_forecaster</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nixtla_model</span></span>)</span>"}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"fullname": "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict", "modulename": "metats.forecasters.wrappers", "qualname": "NixtlaStatsForecasterWrapper.predict", "kind": "function", "doc": "<p>inputs:\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)\n    fh: forecast horizon\n    forecast_dim: the dimension of the series to be generated</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">fh</span>, </span><span class=\"param\"><span class=\"n\">forecast_dim</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.generators": {"fullname": "metats.generators", "modulename": "metats.generators", "kind": "module", "doc": "<p></p>\n"}, "metats.pipeline": {"fullname": "metats.pipeline", "modulename": "metats.pipeline", "kind": "module", "doc": "<p></p>\n"}, "metats.pipeline.MetaLearning": {"fullname": "metats.pipeline.MetaLearning", "modulename": "metats.pipeline", "qualname": "MetaLearning", "kind": "class", "doc": "<p>Base Class for Meta-Learning Pipelines</p>\n"}, "metats.pipeline.MetaLearning.__init__": {"fullname": "metats.pipeline.MetaLearning.__init__", "modulename": "metats.pipeline", "qualname": "MetaLearning.__init__", "kind": "function", "doc": "<p>Args:\n    method: can be either 'averaging' or 'selection'. in the case of averagin,\n            the predictions of base-forecaster will be combined by weighting\n            based on classification weights. In the 'selection' mode, the best\n            forecaster will be selected and others will be ingored\n    loss: loss function for generating meta-learning labels, can be 'mse', 'mae'.\n          to use a custom loss function you can also pass a callable object.\n    reduction: you can apply dimensionality reduction on generated features.\n               can be 'none', 'pca'. use reduction dim to specify\n               final dimension.\n    reduction_dim: will be ignored if reduction='none'.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;averaging&#39;</span>, </span><span class=\"param\"><span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">&#39;mse&#39;</span>, </span><span class=\"param\"><span class=\"n\">reduction</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span>, </span><span class=\"param\"><span class=\"n\">reduction_dim</span><span class=\"o\">=</span><span class=\"mi\">64</span></span>)</span>"}, "metats.pipeline.MetaLearning.add_feature": {"fullname": "metats.pipeline.MetaLearning.add_feature", "modulename": "metats.pipeline", "qualname": "MetaLearning.add_feature", "kind": "function", "doc": "<p>Add a feature generator to the pipeline</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">feature_generator</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.add_forecaster": {"fullname": "metats.pipeline.MetaLearning.add_forecaster", "modulename": "metats.pipeline", "qualname": "MetaLearning.add_forecaster", "kind": "function", "doc": "<p>Add a base forecaster to the pipeline</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">forecaster</span>, </span><span class=\"param\"><span class=\"n\">forecaster_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.loss_fn": {"fullname": "metats.pipeline.MetaLearning.loss_fn", "modulename": "metats.pipeline", "qualname": "MetaLearning.loss_fn", "kind": "function", "doc": "<p>Loss function for the meta-learner\nArgs:\n    y_true: true values (numpy array) (num_series x horizon)\n    Y_pred: the matrix of predictions (num_series x num_models x horizon)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.labels_selection": {"fullname": "metats.pipeline.MetaLearning.labels_selection", "modulename": "metats.pipeline", "qualname": "MetaLearning.labels_selection", "kind": "function", "doc": "<p>Generate labels for the meta-learner using selection\nArgs:\n    y_true: true values (numpy array) (num_series x horizon)\n    Y_pred: the matrix of predictions (num_series x num_models x horizon)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">Y_pred</span>, </span><span class=\"param\"><span class=\"n\">return_one_hot</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.generate_labels": {"fullname": "metats.pipeline.MetaLearning.generate_labels", "modulename": "metats.pipeline", "qualname": "MetaLearning.generate_labels", "kind": "function", "doc": "<p>Generate labels for the meta-learner\nArgs:\n    y_true: true values\n    Y_pred: the matrix of predictions</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">Y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.generate_features": {"fullname": "metats.pipeline.MetaLearning.generate_features", "modulename": "metats.pipeline", "qualname": "MetaLearning.generate_features", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">prediction</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.generate_prediction": {"fullname": "metats.pipeline.MetaLearning.generate_prediction", "modulename": "metats.pipeline", "qualname": "MetaLearning.generate_prediction", "kind": "function", "doc": "<p>Generate predictions for a single forecaster\nArgs:\n    forecaster: the forecaster to be used\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)\n    fh: forecast horizon\n    forecast_dim: the dimension of the variable to be forecasted</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">forecaster</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">fh</span>, </span><span class=\"param\"><span class=\"n\">forecast_dim</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.generate_predictions": {"fullname": "metats.pipeline.MetaLearning.generate_predictions", "modulename": "metats.pipeline", "qualname": "MetaLearning.generate_predictions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">fh</span>, </span><span class=\"param\"><span class=\"n\">forecast_dim</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.add_metalearner": {"fullname": "metats.pipeline.MetaLearning.add_metalearner", "modulename": "metats.pipeline", "qualname": "MetaLearning.add_metalearner", "kind": "function", "doc": "<p>Add a meta-learner to the pipeline\nArgs:\n    metalearner: the meta-learner to be added a scikit-learn estimator</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">metalearner</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.reduce_meta_features": {"fullname": "metats.pipeline.MetaLearning.reduce_meta_features", "modulename": "metats.pipeline", "qualname": "MetaLearning.reduce_meta_features", "kind": "function", "doc": "<p>applying dimensionality reduction on the generated features \nArgs:\n    meta_features: numpy array of meta-features (num_series, features_dim)\n    prediction: if True the stored features from training stage will be used</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">meta_features</span>, </span><span class=\"param\"><span class=\"n\">prediction</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.fit": {"fullname": "metats.pipeline.MetaLearning.fit", "modulename": "metats.pipeline", "qualname": "MetaLearning.fit", "kind": "function", "doc": "<p>Fit the meta-learner\nArgs:\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)\n    fh: forecasting horizon\n    forecast_dim: forecasting dimension</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">fh</span>, </span><span class=\"param\"><span class=\"n\">forecast_dim</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.predict_generate_weights": {"fullname": "metats.pipeline.MetaLearning.predict_generate_weights", "modulename": "metats.pipeline", "qualname": "MetaLearning.predict_generate_weights", "kind": "function", "doc": "<p>Predict using the meta-learner\nArgs:\n    metafeatures: the extracted meta-features (numpy array) (num_series x features_dim)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">meta_features</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.averaging_predictions": {"fullname": "metats.pipeline.MetaLearning.averaging_predictions", "modulename": "metats.pipeline", "qualname": "MetaLearning.averaging_predictions", "kind": "function", "doc": "<p>Generating the predictions by averaging each base-forecaster</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span>, </span><span class=\"param\"><span class=\"n\">predictions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.selection_predictions": {"fullname": "metats.pipeline.MetaLearning.selection_predictions", "modulename": "metats.pipeline", "qualname": "MetaLearning.selection_predictions", "kind": "function", "doc": "<p>Generating the predictions by selecting the best-forecaster</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span>, </span><span class=\"param\"><span class=\"n\">predictions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "metats.pipeline.MetaLearning.predict": {"fullname": "metats.pipeline.MetaLearning.predict", "modulename": "metats.pipeline", "qualname": "MetaLearning.predict", "kind": "function", "doc": "<p>Predict using the meta-learner\nArgs:\n    Y: the timeseries (numpy array) (num_series x series_length x covariates_dim)\n    fh: forecast horizon for predicting\n    forecast_dim: the dimension of the variable to be forecasted\n    return_metalearning_data: if True, the meta-features, weights and base forecasts will be returned\nReturn:\n    result: (numpy array) (num_series x forecast_horizon)\n    if return_metalearning_data is True:\n        predictions: (numpy array) (num_series x number_of_base_forecasters x forecast_horizon)\n        weights: (numpy array) (num_series x number_of_base_forecasters)\n        meta_features: (numpy array) (num_series x features_dim)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">fh</span>, </span><span class=\"param\"><span class=\"n\">forecast_dim</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">return_metalearning_data</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"metats": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.datasets": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.datasets.Dataset": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "metats.datasets.ETSDataset": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "metats.datasets.ETSDataset.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 35}, "metats.datasets.ETSDataset.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 4}, "metats.datasets.ETSDataset.generate_series": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 253, "bases": 0, "doc": 108}, "metats.features": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.features.FeatureGenerator": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "metats.features.FeatureGenerator.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 18}, "metats.features.FeatureGenerator.transform": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 16}, "metats.features.FeatureGenerator.fit_transform": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "metats.features.FeatureGenerator.is_trainable": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "metats.features.deep": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.features.deep.LSTMEncoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 9}, "metats.features.deep.LSTMEncoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 38}, "metats.features.deep.LSTMEncoder.get_initial": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "metats.features.deep.LSTMEncoder.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "metats.features.deep.LSTMDecoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 9}, "metats.features.deep.LSTMDecoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 48}, "metats.features.deep.LSTMDecoder.get_initial": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "metats.features.deep.LSTMDecoder.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "metats.features.deep.GRUEncoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 9}, "metats.features.deep.GRUEncoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 38}, "metats.features.deep.GRUEncoder.get_initial": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "metats.features.deep.GRUEncoder.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "metats.features.deep.GRUDecoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 9}, "metats.features.deep.GRUDecoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 48}, "metats.features.deep.GRUDecoder.get_initial": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "metats.features.deep.GRUDecoder.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "metats.features.deep.MLPEncoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 8}, "metats.features.deep.MLPEncoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 55}, "metats.features.deep.MLPEncoder.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "metats.features.deep.MLPDecoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 8}, "metats.features.deep.MLPDecoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 55}, "metats.features.deep.MLPDecoder.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "metats.features.deep.Encoder_Decoder_TCN": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 32}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 98}, "metats.features.deep.AutoEncoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 5}, "metats.features.deep.AutoEncoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "metats.features.deep.AutoEncoder.encode": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 42}, "metats.features.deep.AutoEncoder.decode": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 20}, "metats.features.deep.AutoEncoder.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "metats.features.deep.PyTorchTrainer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "metats.features.deep.PyTorchTrainer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 21}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 5}, "metats.features.deep.PyTorchTrainer.initialize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 15}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 6}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 25}, "metats.features.deep.PyTorchTrainer.step": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 6}, "metats.features.statistical": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.features.statistical.TsFresh": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 6}, "metats.features.statistical.TsFresh.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 18}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 22}, "metats.features.statistical.TsFresh.transform": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 21}, "metats.features.unsupervised": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.features.unsupervised.DeepAETrainer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 7}, "metats.features.unsupervised.DeepAETrainer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 21}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 25}, "metats.features.unsupervised.DeepAutoEncoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 12}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 3}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 18}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 16}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "metats.features.unsupervised.Contrastive": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "metats.features.unsupervised.Contrastive.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 18}, "metats.features.unsupervised.Contrastive.transform": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 16}, "metats.forecasters": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.forecasters.BaseForecaster": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "metats.forecasters.statistical": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.forecasters.statistical.SeasonalNaiveForecaster": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 5}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 32}, "metats.forecasters.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.forecasters.utils.is_sktime_forecaster": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "metats.forecasters.utils.is_darts_forecaster": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "metats.forecasters.wrappers": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 16}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 29}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 16}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 29}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 17}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 29}, "metats.generators": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.pipeline": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "metats.pipeline.MetaLearning": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "metats.pipeline.MetaLearning.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 98}, "metats.pipeline.MetaLearning.add_feature": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 9}, "metats.pipeline.MetaLearning.add_forecaster": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 9}, "metats.pipeline.MetaLearning.loss_fn": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 33}, "metats.pipeline.MetaLearning.labels_selection": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 35}, "metats.pipeline.MetaLearning.generate_labels": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 19}, "metats.pipeline.MetaLearning.generate_features": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "metats.pipeline.MetaLearning.generate_prediction": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 41}, "metats.pipeline.MetaLearning.generate_predictions": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "metats.pipeline.MetaLearning.add_metalearner": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 21}, "metats.pipeline.MetaLearning.reduce_meta_features": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 33}, "metats.pipeline.MetaLearning.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 27}, "metats.pipeline.MetaLearning.predict_generate_weights": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 21}, "metats.pipeline.MetaLearning.averaging_predictions": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 10}, "metats.pipeline.MetaLearning.selection_predictions": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 10}, "metats.pipeline.MetaLearning.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 99}}, "length": 107, "save": true}, "index": {"qualname": {"root": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 16, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.Dataset": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.forecasters.utils.is_darts_forecaster": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.AutoEncoder.decode": {"tf": 1}}, "df": 1, "r": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.load": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 4}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1, "r": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"metats.features.FeatureGenerator.is_trainable": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"metats.datasets.ETSDataset.load": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.AutoEncoder.loss": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}}, "df": 4}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {"metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}}, "df": 4}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"metats.features.deep.PyTorchTrainer.step": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.FeatureGenerator": {"tf": 1}, "metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.FeatureGenerator.is_trainable": {"tf": 1}}, "df": 5}}}}}}}}}, "s": {"docs": {"metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}}, "df": 4}}}}}}}}}, "n": {"docs": {"metats.pipeline.MetaLearning.loss_fn": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.FeatureGenerator.is_trainable": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.transform": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 17}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.AutoEncoder": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.AutoEncoder.loss": {"tf": 1}}, "df": 5}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1}}, "df": 8}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 3}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}}, "df": 2, "s": {"docs": {"metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}}, "df": 3}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.BaseForecaster": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 1}}}}}}}}}, "fullname": {"root": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 16, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats": {"tf": 1}, "metats.datasets": {"tf": 1}, "metats.datasets.Dataset": {"tf": 1}, "metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.load": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.features": {"tf": 1}, "metats.features.FeatureGenerator": {"tf": 1}, "metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.FeatureGenerator.is_trainable": {"tf": 1}, "metats.features.deep": {"tf": 1}, "metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.AutoEncoder.loss": {"tf": 1}, "metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1}, "metats.features.statistical": {"tf": 1}, "metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters": {"tf": 1}, "metats.forecasters.BaseForecaster": {"tf": 1}, "metats.forecasters.statistical": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.utils": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}, "metats.forecasters.wrappers": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.generators": {"tf": 1}, "metats.pipeline": {"tf": 1}, "metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 107}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 17}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.Dataset": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.datasets": {"tf": 1}, "metats.datasets.Dataset": {"tf": 1}, "metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.load": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 6}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.forecasters.utils.is_darts_forecaster": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"metats.features.deep": {"tf": 1}, "metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.AutoEncoder.loss": {"tf": 1}, "metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1}}, "df": 38, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.AutoEncoder.decode": {"tf": 1}}, "df": 1, "r": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.load": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 4}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1, "r": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"metats.features.FeatureGenerator.is_trainable": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"metats.datasets.ETSDataset.load": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.AutoEncoder.loss": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}}, "df": 4}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.generators": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}}, "df": 4}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"metats.features.deep.PyTorchTrainer.step": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.statistical": {"tf": 1}, "metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.forecasters.statistical": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {"metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.features": {"tf": 1}, "metats.features.FeatureGenerator": {"tf": 1}, "metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.FeatureGenerator.is_trainable": {"tf": 1}, "metats.features.deep": {"tf": 1}, "metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.AutoEncoder.loss": {"tf": 1}, "metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1}, "metats.features.statistical": {"tf": 1}, "metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 64}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.FeatureGenerator": {"tf": 1}, "metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.FeatureGenerator.is_trainable": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}}, "df": 4, "s": {"docs": {"metats.forecasters": {"tf": 1}, "metats.forecasters.BaseForecaster": {"tf": 1}, "metats.forecasters.statistical": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.utils": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}, "metats.forecasters.wrappers": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}}, "df": 19}}}}}}}}}}, "n": {"docs": {"metats.pipeline.MetaLearning.loss_fn": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.FeatureGenerator.is_trainable": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.transform": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.AutoEncoder": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.AutoEncoder.loss": {"tf": 1}}, "df": 5}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1}}, "df": 8}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline": {"tf": 1}, "metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 18}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}}, "df": 2, "s": {"docs": {"metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}}, "df": 3}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.BaseForecaster": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.unsupervised": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}}, "df": 13}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"metats.forecasters.utils": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.forecasters.wrappers": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}}, "df": 10}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 1}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"0": {"6": {"docs": {"metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "2": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}}, "df": 1}, "docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 3.605551275463989}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 7}, "1": {"0": {"0": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"9": {"9": {"4": {"4": {"7": {"4": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"8": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}}, "df": 1}, "docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 2.23606797749979}}, "df": 1}, "2": {"2": {"0": {"6": {"8": {"0": {"9": {"4": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}, "3": {"2": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}}, "df": 2}, "9": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 2.449489742783178}, "metats.pipeline.MetaLearning.__init__": {"tf": 2.449489742783178}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "4": {"9": {"9": {"6": {"9": {"5": {"2": {"7": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"3": {"4": {"0": {"3": {"7": {"6": {"1": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"5": {"2": {"0": {"2": {"0": {"3": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"6": {"2": {"1": {"8": {"5": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "6": {"4": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 3}, "docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 2}, "8": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "9": {"0": {"0": {"7": {"5": {"0": {"3": {"4": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"metats.datasets.ETSDataset.__init__": {"tf": 5.656854249492381}, "metats.datasets.ETSDataset.load": {"tf": 4.242640687119285}, "metats.datasets.ETSDataset.generate_series": {"tf": 13.856406460551018}, "metats.features.FeatureGenerator.fit": {"tf": 3.7416573867739413}, "metats.features.FeatureGenerator.transform": {"tf": 3.7416573867739413}, "metats.features.FeatureGenerator.fit_transform": {"tf": 3.7416573867739413}, "metats.features.FeatureGenerator.is_trainable": {"tf": 3.1622776601683795}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 4.898979485566356}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 3.7416573867739413}, "metats.features.deep.LSTMEncoder.forward": {"tf": 3.7416573867739413}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 5.830951894845301}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 3.7416573867739413}, "metats.features.deep.LSTMDecoder.forward": {"tf": 3.7416573867739413}, "metats.features.deep.GRUEncoder.__init__": {"tf": 4.898979485566356}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 3.7416573867739413}, "metats.features.deep.GRUEncoder.forward": {"tf": 3.7416573867739413}, "metats.features.deep.GRUDecoder.__init__": {"tf": 5.830951894845301}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 3.7416573867739413}, "metats.features.deep.GRUDecoder.forward": {"tf": 3.7416573867739413}, "metats.features.deep.MLPEncoder.__init__": {"tf": 6.557438524302}, "metats.features.deep.MLPEncoder.forward": {"tf": 3.7416573867739413}, "metats.features.deep.MLPDecoder.__init__": {"tf": 6.082762530298219}, "metats.features.deep.MLPDecoder.forward": {"tf": 3.7416573867739413}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 8.366600265340756}, "metats.features.deep.AutoEncoder.__init__": {"tf": 3.4641016151377544}, "metats.features.deep.AutoEncoder.encode": {"tf": 4.69041575982343}, "metats.features.deep.AutoEncoder.decode": {"tf": 3.7416573867739413}, "metats.features.deep.AutoEncoder.loss": {"tf": 3.7416573867739413}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 4.898979485566356}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 3.1622776601683795}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 3.1622776601683795}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 3.7416573867739413}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 3.7416573867739413}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 3.1622776601683795}, "metats.features.deep.PyTorchTrainer.step": {"tf": 3.1622776601683795}, "metats.features.statistical.TsFresh.fit": {"tf": 3.7416573867739413}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 3.7416573867739413}, "metats.features.statistical.TsFresh.transform": {"tf": 3.7416573867739413}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 4}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 3.1622776601683795}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 7.0710678118654755}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 3.7416573867739413}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 3.7416573867739413}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 3.7416573867739413}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 3.1622776601683795}, "metats.features.unsupervised.Contrastive.fit": {"tf": 3.7416573867739413}, "metats.features.unsupervised.Contrastive.transform": {"tf": 3.7416573867739413}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 4.242640687119285}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 3.1622776601683795}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 3.1622776601683795}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 3.1622776601683795}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 2.8284271247461903}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 4.69041575982343}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 2.8284271247461903}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 4.69041575982343}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 2.8284271247461903}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 4.69041575982343}, "metats.pipeline.MetaLearning.__init__": {"tf": 6.48074069840786}, "metats.pipeline.MetaLearning.add_feature": {"tf": 3.7416573867739413}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 4.898979485566356}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 4.242640687119285}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 5.0990195135927845}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 4.242640687119285}, "metats.pipeline.MetaLearning.generate_features": {"tf": 4.69041575982343}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 5.0990195135927845}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 5.0990195135927845}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 3.7416573867739413}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 4.69041575982343}, "metats.pipeline.MetaLearning.fit": {"tf": 5.0990195135927845}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 3.7416573867739413}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 4.242640687119285}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 4.242640687119285}, "metats.pipeline.MetaLearning.predict": {"tf": 5.830951894845301}}, "df": 73, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.7320508075688772}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"metats.datasets.ETSDataset.load": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.load": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 7}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 1}, "h": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 8}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"0": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}}, "df": 10}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 7}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 2, "s": {"docs": {"metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 2}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}}, "df": 3}}}}}}}}}}, "s": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"metats.datasets.ETSDataset.load": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1}, "metats.features.FeatureGenerator.is_trainable": {"tf": 1}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.AutoEncoder.loss": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 54}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}}, "df": 12}}}, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"metats.datasets.ETSDataset.load": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"0": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.LSTMEncoder.get_initial": {"tf": 1}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}}, "df": 5}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.AutoEncoder.loss": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 7}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"metats.pipeline.MetaLearning.labels_selection": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.AutoEncoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 23}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.labels_selection": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 2}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"metats.features.unsupervised.DeepAETrainer": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}}, "df": 8}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}}, "df": 8}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}}, "df": 8}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}}, "df": 4}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}}, "df": 4}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.unsupervised.DeepAETrainer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 2}, "1": {"2": {"8": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}, "2": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 6}, "3": {"2": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "6": {"4": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"metats": {"tf": 1.7320508075688772}, "metats.datasets": {"tf": 1.7320508075688772}, "metats.datasets.Dataset": {"tf": 1.4142135623730951}, "metats.datasets.ETSDataset": {"tf": 1.4142135623730951}, "metats.datasets.ETSDataset.__init__": {"tf": 2}, "metats.datasets.ETSDataset.load": {"tf": 1.4142135623730951}, "metats.datasets.ETSDataset.generate_series": {"tf": 4.69041575982343}, "metats.features": {"tf": 1.7320508075688772}, "metats.features.FeatureGenerator": {"tf": 1.4142135623730951}, "metats.features.FeatureGenerator.fit": {"tf": 1.7320508075688772}, "metats.features.FeatureGenerator.transform": {"tf": 1.7320508075688772}, "metats.features.FeatureGenerator.fit_transform": {"tf": 1.7320508075688772}, "metats.features.FeatureGenerator.is_trainable": {"tf": 1.7320508075688772}, "metats.features.deep": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMEncoder": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMEncoder.get_initial": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMEncoder.forward": {"tf": 3.872983346207417}, "metats.features.deep.LSTMDecoder": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.get_initial": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMDecoder.forward": {"tf": 3.872983346207417}, "metats.features.deep.GRUEncoder": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.get_initial": {"tf": 1.7320508075688772}, "metats.features.deep.GRUEncoder.forward": {"tf": 3.872983346207417}, "metats.features.deep.GRUDecoder": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.get_initial": {"tf": 1.7320508075688772}, "metats.features.deep.GRUDecoder.forward": {"tf": 3.872983346207417}, "metats.features.deep.MLPEncoder": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.MLPEncoder.forward": {"tf": 3.872983346207417}, "metats.features.deep.MLPDecoder": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.MLPDecoder.forward": {"tf": 3.872983346207417}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 2.8284271247461903}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 3}, "metats.features.deep.AutoEncoder": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.encode": {"tf": 2}, "metats.features.deep.AutoEncoder.decode": {"tf": 1.7320508075688772}, "metats.features.deep.AutoEncoder.loss": {"tf": 1.7320508075688772}, "metats.features.deep.PyTorchTrainer": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.initialize": {"tf": 1.7320508075688772}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1.4142135623730951}, "metats.features.statistical": {"tf": 1.7320508075688772}, "metats.features.statistical.TsFresh": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.fit": {"tf": 1.7320508075688772}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1.7320508075688772}, "metats.features.statistical.TsFresh.transform": {"tf": 1.7320508075688772}, "metats.features.unsupervised": {"tf": 1.7320508075688772}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1.7320508075688772}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAutoEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.unsupervised.DeepAutoEncoder.print_loss_callback": {"tf": 1.7320508075688772}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1.7320508075688772}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1.7320508075688772}, "metats.features.unsupervised.DeepAutoEncoder.is_trainable": {"tf": 1.7320508075688772}, "metats.features.unsupervised.Contrastive": {"tf": 1.4142135623730951}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1.7320508075688772}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1.7320508075688772}, "metats.forecasters": {"tf": 1.7320508075688772}, "metats.forecasters.BaseForecaster": {"tf": 1.4142135623730951}, "metats.forecasters.statistical": {"tf": 1.7320508075688772}, "metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1.4142135623730951}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1.4142135623730951}, "metats.forecasters.utils": {"tf": 1.7320508075688772}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1.4142135623730951}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1.4142135623730951}, "metats.forecasters.utils.is_nixtla_stats_forecaster": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.generators": {"tf": 1.7320508075688772}, "metats.pipeline": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_features": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_predictions": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.fit": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 107, "b": {"0": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.Dataset": {"tf": 1}, "metats.features.FeatureGenerator": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.forecasters.BaseForecaster": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 9, "d": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1.7320508075688772}, "metats.features.deep.AutoEncoder.decode": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1.4142135623730951}}, "df": 6}}}}, "e": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 2.6457513110645907}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 26, "t": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 2}}}, "i": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}, "y": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 10}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.Dataset": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.features.FeatureGenerator": {"tf": 1}, "metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.forecasters.BaseForecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.pipeline.MetaLearning": {"tf": 1}}, "df": 18, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.unsupervised.Contrastive": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 9}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.forward": {"tf": 1.4142135623730951}}, "df": 6, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}, "n": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 2.23606797749979}}, "df": 4}, "s": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 3}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.datasets.Dataset": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 2.8284271247461903}, "metats.features.FeatureGenerator": {"tf": 1}, "metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.forecasters.BaseForecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 38, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 7}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 2}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 11, "s": {"docs": {"metats.forecasters.BaseForecaster": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 3}}, "d": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.FeatureGenerator": {"tf": 1}, "metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}}, "df": 8, "s": {"docs": {"metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 2.23606797749979}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 9}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}}, "df": 11}}}}}}}, "h": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 7}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.load": {"tf": 1}}, "df": 2, "s": {"docs": {"metats.datasets.Dataset": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 14, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 14, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}}, "df": 4}, "s": {"docs": {"metats.features.deep.AutoEncoder.decode": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset": {"tf": 1.4142135623730951}, "metats.datasets.ETSDataset.__init__": {"tf": 1.4142135623730951}, "metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 3}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 2.449489742783178}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}}, "df": 2}}, "s": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}}, "df": 4}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.statistical.TsFresh.transform": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.unsupervised.Contrastive": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1.4142135623730951}, "metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}, "metats.features.FeatureGenerator.fit": {"tf": 1.4142135623730951}, "metats.features.FeatureGenerator.transform": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.encode": {"tf": 1.7320508075688772}, "metats.features.statistical.TsFresh.fit": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.transform": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1.4142135623730951}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1.4142135623730951}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1.4142135623730951}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 2.449489742783178}}, "df": 30}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 2.449489742783178}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 2}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1.4142135623730951}}, "df": 12}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.PyTorchTrainer.step": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 8}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"metats.features.deep.PyTorchTrainer.step": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.forward": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 2.449489742783178}, "metats.features.FeatureGenerator.fit": {"tf": 1.4142135623730951}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 2.449489742783178}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.forward": {"tf": 2.449489742783178}, "metats.features.deep.GRUEncoder.forward": {"tf": 2.449489742783178}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.forward": {"tf": 2.449489742783178}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 2.449489742783178}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 2.449489742783178}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1.4142135623730951}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1.7320508075688772}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.__init__": {"tf": 2}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 2}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.fit": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict": {"tf": 2.23606797749979}}, "df": 43, "m": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}, "n": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.forward": {"tf": 1.4142135623730951}}, "df": 6}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1.4142135623730951}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 21}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 7}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 2.23606797749979}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.PyTorchTrainer.step": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.encode": {"tf": 1.4142135623730951}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1.4142135623730951}, "metats.features.FeatureGenerator.transform": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.fit": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1.4142135623730951}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1.4142135623730951}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 15}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}}, "df": 3}}}}}}}, "m": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {"metats.datasets.ETSDataset": {"tf": 1}, "metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 10, "s": {"docs": {"metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}}, "df": 9}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}}, "df": 12}}}}}, "u": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}, "e": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 4}}}, "a": {"docs": {"metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 10, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 2}, "metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 2}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.encode": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.decode": {"tf": 1.4142135623730951}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1.7320508075688772}, "metats.features.deep.PyTorchTrainer.step": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1.7320508075688772}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1.4142135623730951}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1.4142135623730951}}, "df": 34, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 16}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 2.23606797749979}}, "df": 20}}}}, "n": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 8}, "y": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}}, "d": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1, "d": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 2}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 7}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 7}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.AutoEncoder": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1, "g": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"0": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1.4142135623730951}, "metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}, "metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 24}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"metats.datasets.ETSDataset.load": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.7320508075688772}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.7320508075688772}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.decode": {"tf": 1.7320508075688772}}, "df": 7}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.7320508075688772}}, "df": 8}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1.7320508075688772}, "metats.datasets.ETSDataset.generate_series": {"tf": 2.449489742783178}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 2}, "metats.features.deep.LSTMEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 2.23606797749979}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.__init__": {"tf": 2}, "metats.features.deep.GRUEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.__init__": {"tf": 2.23606797749979}, "metats.features.deep.GRUDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 2}, "metats.features.deep.MLPEncoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 2}, "metats.features.deep.MLPDecoder.forward": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 2.23606797749979}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 30}, "n": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 2}}, "e": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}, "r": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}}, "df": 4}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.LSTMDecoder.__init__": {"tf": 2}, "metats.features.deep.GRUDecoder.__init__": {"tf": 2}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 2.23606797749979}}, "df": 24, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 7}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 2.23606797749979}}, "df": 20}}}}, "o": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.forecasters.statistical.SeasonalNaiveForecaster": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "g": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}}, "df": 7, "d": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.pipeline.MetaLearning.add_feature": {"tf": 1}}, "df": 5, "s": {"docs": {"metats.features.FeatureGenerator": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {"metats.features.deep.LSTMEncoder": {"tf": 1}, "metats.features.deep.LSTMDecoder": {"tf": 1}, "metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.MLPEncoder": {"tf": 1}, "metats.features.deep.MLPDecoder": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.AutoEncoder": {"tf": 1}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {"metats.features.deep.GRUEncoder": {"tf": 1}, "metats.features.deep.GRUDecoder": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.7320508075688772}}, "df": 3}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.deep.PyTorchTrainer": {"tf": 1}, "metats.features.deep.PyTorchTrainer.__init__": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1}}, "df": 10}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 1, "s": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.averaging_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.selection_predictions": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 8}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.add_feature": {"tf": 1}, "metats.pipeline.MetaLearning.add_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.add_metalearner": {"tf": 1}}, "df": 3, "s": {"docs": {"metats.pipeline.MetaLearning": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 10}, "n": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"metats.datasets.ETSDataset.generate_series": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 2}, "metats.features.deep.MLPDecoder.__init__": {"tf": 2}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 2}}, "df": 7, "s": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}}, "df": 23}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.PyTorchTrainer.initial_optimizer": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}, "d": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.forecasters.utils.is_sktime_forecaster": {"tf": 1}, "metats.forecasters.utils.is_darts_forecaster": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 7}, "t": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}}, "df": 2}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {"metats.pipeline.MetaLearning.loss_fn": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.AutoEncoder.decode": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"metats.datasets.ETSDataset.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 2}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.MLPDecoder.__init__": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}, "metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "x": {"docs": {"metats.features.FeatureGenerator.fit": {"tf": 1}, "metats.features.FeatureGenerator.transform": {"tf": 1}, "metats.features.deep.AutoEncoder.encode": {"tf": 1.4142135623730951}, "metats.features.deep.AutoEncoder.decode": {"tf": 1}, "metats.features.statistical.TsFresh.fit": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1.4142135623730951}, "metats.features.statistical.TsFresh.transform": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAutoEncoder.fit": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder.transform": {"tf": 1}, "metats.features.unsupervised.Contrastive.fit": {"tf": 1}, "metats.features.unsupervised.Contrastive.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.7320508075688772}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.fit": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 2.6457513110645907}}, "df": 21}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"metats.features.deep.PyTorchTrainer.register_loss_callback": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}, "metats.features.deep.PyTorchTrainer.apply_loss_callbacks": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 2.23606797749979}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.PyTorchTrainer.__init__": {"tf": 1.4142135623730951}, "metats.features.unsupervised.DeepAETrainer.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.LSTMEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.LSTMDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.GRUDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPEncoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1.4142135623730951}, "metats.features.deep.Encoder_Decoder_TCN": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.7320508075688772}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.LSTMEncoder.forward": {"tf": 1}, "metats.features.deep.LSTMDecoder.forward": {"tf": 1}, "metats.features.deep.GRUEncoder.forward": {"tf": 1}, "metats.features.deep.GRUDecoder.forward": {"tf": 1}, "metats.features.deep.MLPEncoder.forward": {"tf": 1}, "metats.features.deep.MLPDecoder.forward": {"tf": 1}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1.7320508075688772}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"metats.features.deep.PyTorchTrainer.get_mini_batch": {"tf": 1}, "metats.features.unsupervised.DeepAETrainer.get_mini_batch": {"tf": 1}, "metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"metats.features.deep.MLPEncoder.__init__": {"tf": 1}, "metats.features.deep.MLPDecoder.__init__": {"tf": 1}, "metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.reduce_meta_features": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"metats.features.statistical.TsFresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.features.unsupervised.DeepAutoEncoder": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.__init__": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.__init__": {"tf": 1}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1}, "metats.pipeline.MetaLearning.predict_generate_weights": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 10}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"metats.features.deep.Encoder_Decoder_TCN.__init__": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"metats.features.deep.AutoEncoder.encode": {"tf": 1}, "metats.features.statistical.TsFresh.reshape_for_tsfresh": {"tf": 1}, "metats.features.statistical.TsFresh.transform": {"tf": 1}, "metats.forecasters.statistical.SeasonalNaiveForecaster.predict": {"tf": 1}, "metats.forecasters.wrappers.DartsForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.SKTimeForecasterWrapper.predict": {"tf": 1}, "metats.forecasters.wrappers.NixtlaStatsForecasterWrapper.predict": {"tf": 1}, "metats.pipeline.MetaLearning.loss_fn": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.labels_selection": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_labels": {"tf": 1.4142135623730951}, "metats.pipeline.MetaLearning.generate_prediction": {"tf": 1}, "metats.pipeline.MetaLearning.fit": {"tf": 1}, "metats.pipeline.MetaLearning.predict": {"tf": 1}}, "df": 13, "o": {"docs": {}, "df": 0, "u": {"docs": {"metats.pipeline.MetaLearning.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();